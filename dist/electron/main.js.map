{"version":3,"sources":["webpack://referencer-electron/./api/ipcController.ts","webpack://referencer-electron/external \"electron\"","webpack://referencer-electron/webpack/bootstrap","webpack://referencer-electron/./api/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,iEAA4C;AAE5C;IAGC;QACC,IAAI,CAAC,OAAO,GAAG,kBAAO,CAAC;IACxB,CAAC;IAEM,4BAAI,GAAX;QACC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAK;YAAE,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,6BAAO;;YACxC,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,SAAE,IAAI,QAAC,CAAC,CAAC;QAC5B,CAAC,CAAC;IACH,CAAC;IACF,oBAAC;AAAD,CAAC;AAZY,sCAAa;;;;;;;;;;;ACF1B,sC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,iEAAkI;AAClI,2FAAgD;AAEhD;IAkBC;QAhBQ,qBAAgB,GAAoC;YACrD,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,GAAG;YACb,SAAS,EAAE,GAAG;YACpB,cAAc,EAAE;gBACf,eAAe,EAAE,KAAK;gBACtB,0BAA0B,EAAE,IAAI;gBAChC,gBAAgB,EAAE,IAAI;gBACtB,OAAO,EAAK,SAAS,gBAAa;aAClC;SACE,CAAC;QAMJ,IAAI,CAAC,GAAG,GAAG,cAAG,CAAC;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACtB,CAAC;IAEO,2BAAY,GAApB,UAAqB,UAAmB,EAAE,aAA+C;QACxF,IAAM,gBAAgB,GAAG,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,IAAI,CAAC,gBAAgB,CAAC;QAChE,IAAI,SAAwB,CAAC;QAC7B,IAAI,UAAU,EAAE;YACf,SAAS,GAAG,IAAI,wBAAa,CAAC,gBAAgB,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC;YAC7C,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC5B;aAAM;YACN,SAAS,GAAG,IAAI,wBAAa,CAAC,gBAAgB,CAAC,CAAC;YAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC;SACrC;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAEO,4BAAa,GAArB,UAAsB,MAAqB;QAC1C,KAAsC,IAAI,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC7E,CAAC;IAEO,2BAAY,GAApB;QAAA,iBASC;QARA,IAAI,CAAC,GAAG;aACN,EAAE,CAAC,OAAO,EAAE,cAAM,YAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAvB,CAAuB,CAAC;aAC1C,EAAE,CAAC,mBAAmB,EAAE;YACxB,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ;gBAAE,KAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACpD,CAAC,CAAC;aACD,EAAE,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,KAAI,CAAC,UAAU;gBAAE,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC;IACJ,CAAC;IAEO,4BAAa,GAArB;QACC,IAAI,6BAAa,EAAE,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IACF,WAAC;AAAD,CAAC;AAED,CAAC,cAAM,WAAI,IAAI,EAAE,EAAV,CAAU,CAAC,EAAE,CAAC","file":"main.js","sourcesContent":["import { ipcMain, IpcMain } from 'electron';\n\nexport class IPCController {\n\tprivate ipcMain!: IpcMain;\n\n\tconstructor() {\n\t\tthis.ipcMain = ipcMain;\n\t}\n\n\tpublic init(): void {\n\t\tthis.ipcMain.on('toMain', (event, ...args) => {\n\t\t\tconsole.log({event, args});\n\t\t})\n\t}\n}\n","module.exports = require(\"electron\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { app, App, BrowserWindow, Session, BrowserWindowConstructorOptions, ipcMain, contextBridge, ipcRenderer } from 'electron';\nimport { IPCController } from './ipcController';\n\nclass Main {\n\tprivate app: App;\n\tprivate defaultWindowOpt: BrowserWindowConstructorOptions = {\n        width: 800,\n        height: 600,\n        minWidth: 400,\n        minHeight: 350,\n\t\twebPreferences: {\n\t\t\tnodeIntegration: false,\n\t\t\tworldSafeExecuteJavaScript: true,\n\t\t\tcontextIsolation: true,\n\t\t\tpreload: `${__dirname}/preload.js`\n\t\t}\n    };\n\tprivate mainWindow!: BrowserWindow;\n\tprivate secondaryWindows!: Array<BrowserWindow>;\n\tprivate session!: Session;\n\n\tconstructor() {\n\t\tthis.app = app;\n\t\tthis.setListeners();\n\t\tthis.initialiseIPC();\n\t}\n\n\tprivate createWindow(mainWindow: boolean, windowOptions?: BrowserWindowConstructorOptions): void {\n\t\tconst newWindowOptions = windowOptions ?? this.defaultWindowOpt;\n\t\tlet newWindow: BrowserWindow;\n\t\tif (mainWindow) {\n\t\t\tnewWindow = new BrowserWindow(newWindowOptions);\n\t\t\tthis.session = newWindow.webContents.session;\n\t\t\tnewWindow.loadURL('http://localhost:3000');\n\t\t\tthis.mainWindow = newWindow;\n\t\t} else {\n\t\t\tnewWindow = new BrowserWindow(newWindowOptions);\n\t\t\tthis.secondaryWindows.push(newWindow)\n\t\t}\n\t\tthis.checkDevTools(newWindow);\n\t}\n\n\tprivate checkDevTools(window: BrowserWindow): void {\n\t\tprocess.env.NODE_ENV === 'development' && window.webContents.openDevTools();\n\t}\n\n\tprivate setListeners(): void {\n\t\tthis.app\n\t\t\t.on('ready', () => this.createWindow(true))\n\t\t\t.on('window-all-closed', () => {\n\t\t\t\tif (process.platform !== 'darwin') this.app.quit();\n\t\t\t})\n\t\t\t.on('activate', () => {\n\t\t\t\tif (!this.mainWindow) this.createWindow(true);\n\t\t\t})\n\t}\n\n\tprivate initialiseIPC(): void {\n\t\tnew IPCController().init();\n\t}\n}\n\n(() => new Main())();\n"],"sourceRoot":""}